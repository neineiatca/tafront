{"version":3,"sources":["components/shared/Flex.tsx","components/shared/VerticalCenteredBox.tsx","components/Header.tsx","components/Investments/InvestmentItem/DiscreteSlider.tsx","components/shared/PercentageBar.tsx","components/Investments/InvestmentItem/InvestmentItem.tsx","components/Investments/InvestmentsHeader.tsx","components/Investments/InvestmentsList.tsx","components/Summary.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Flex","children","style","display","VerticalCenteredBox","marginTop","marginBottom","textAlign","Header","fontWeight","fontSize","valuetext","value","DiscreteSlider","defaultValue","updateElement","index","Slider","getAriaValueText","step","marks","min","max","valueLabelDisplay","onChange","eee","parseInt","target","textContent","PercentageBar","width","backgroundColor","color","InvestmentItem","investment","removeInvestment","border","onClick","name","weight","assetClass","InvestmentsHeader","InvestmentsList","investments","addInvestment","height","map","e","marginRight","marginLeft","borderRadius","Summary","paddingLeft","App","useState","setInvestments","Math","round","reduce","acc","currentObj","length","tmpInvestments","JSON","parse","stringify","push","i","splice","newWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.120e4d5c.chunk.js","sourcesContent":["type Props = {\r\n  children: JSX.Element | JSX.Element[];\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nexport const Flex = ({ children, style }: Props) => {\r\n  return <div style={{ ...style, display: \"flex\" }}>{children}</div>;\r\n};\r\n","type Props = {\r\n  children?: JSX.Element | string;\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nexport const VerticalCenteredBox = ({ children, style }: Props) => {\r\n  return (\r\n    <span\r\n      style={{\r\n        ...style,\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n","import { Flex } from \"./shared/Flex\";\r\nimport { VerticalCenteredBox } from \"./shared/VerticalCenteredBox\";\r\n\r\ntype Props = {\r\n  style: React.CSSProperties;\r\n};\r\n\r\nexport const Header = ({ style: style }: Props) => {\r\n  return (\r\n    <Flex>\r\n      <VerticalCenteredBox\r\n        style={{\r\n          ...style,\r\n          fontWeight: \"bolder\",\r\n          fontSize: \"xx-large\",\r\n        }}\r\n      >\r\n        Build your portfolio\r\n      </VerticalCenteredBox>\r\n    </Flex>\r\n  );\r\n};\r\n","import Slider from \"@material-ui/core/Slider\";\r\n\r\ntype Props = {\r\n  defaultValue: number;\r\n  updateElement: (newWeight: number, i: number) => void;\r\n  index: number;\r\n};\r\n\r\nfunction valuetext(value: any) {\r\n  return `${value}Â°C`;\r\n}\r\n\r\nexport default function DiscreteSlider({\r\n  defaultValue,\r\n  updateElement,\r\n  index,\r\n}: Props) {\r\n  return (\r\n    <div>\r\n      <Slider\r\n        defaultValue={defaultValue}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-small-steps\"\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={100}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={(eee: any) => {\r\n          updateElement(parseInt(eee.target.textContent), index);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","type Props = {\r\n  value: number;\r\n};\r\n\r\nexport const PercentageBar = ({ value }: Props) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div\r\n        style={{ width: `${value}%`, backgroundColor: \"green\", color: \"white\" }}\r\n      >\r\n        {value}\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: `${100 - value}%`,\r\n          backgroundColor: \"blue\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {100 - value}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Flex } from \"../../shared/Flex\";\r\nimport DiscreteSlider from \"./DiscreteSlider\";\r\nimport { PercentageBar } from \"../../shared/PercentageBar\";\r\nimport { Investment } from \"../../model/Investment\";\r\nimport { VerticalCenteredBox } from \"./../../shared/VerticalCenteredBox\";\r\n\r\ntype Props = {\r\n  investment: Investment;\r\n  style?: React.CSSProperties;\r\n  removeInvestment: (i: number) => void;\r\n  index: number;\r\n  updateElement: (newWeight: number, i: number) => void;\r\n};\r\n\r\nexport const InvestmentItem = ({\r\n  investment,\r\n  style,\r\n  removeInvestment,\r\n  index,\r\n  updateElement,\r\n}: Props) => {\r\n  return (\r\n    <Flex style={style}>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }}>\r\n        <button\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            fontWeight: \"bolder\",\r\n            fontSize: \"xx-large\",\r\n          }}\r\n          onClick={() => {\r\n            removeInvestment(index);\r\n          }}\r\n        >\r\n          x\r\n        </button>\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }}>\r\n        <strong>{investment.name}</strong>\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }}>\r\n        <PercentageBar value={investment.weight} />\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }}>\r\n        <strong>{investment.assetClass}</strong>\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }}>\r\n        <DiscreteSlider\r\n          defaultValue={investment.weight}\r\n          updateElement={updateElement}\r\n          index={index}\r\n        />\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }}>\r\n        <input value={investment.weight} style={{ textAlign: \"center\" }} />\r\n      </VerticalCenteredBox>\r\n    </Flex>\r\n  );\r\n};\r\n","import { Flex } from \"../shared/Flex\";\r\nimport { VerticalCenteredBox } from \"../shared/VerticalCenteredBox\";\r\n\r\ntype Props = {\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nexport const InvestmentsHeader = ({ style }: Props) => {\r\n  return (\r\n    <Flex style={style}>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }} />\r\n      <VerticalCenteredBox\r\n        style={{ width: \"20%\", fontWeight: \"bolder\", fontSize: \"x-large\" }}\r\n      >\r\n        Investment\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }} />\r\n      <VerticalCenteredBox\r\n        style={{ width: \"20%\", fontWeight: \"bolder\", fontSize: \"x-large\" }}\r\n      >\r\n        Asset Class\r\n      </VerticalCenteredBox>\r\n      <VerticalCenteredBox style={{ width: \"20%\" }} />\r\n      <VerticalCenteredBox style={{ width: \"20%\" }} />\r\n    </Flex>\r\n  );\r\n};\r\n","import { Investment } from \"../model/Investment\";\r\nimport { Flex } from \"../shared/Flex\";\r\nimport { InvestmentItem } from \"./InvestmentItem/InvestmentItem\";\r\nimport { InvestmentsHeader } from \"./InvestmentsHeader\";\r\n\r\ntype Prop = {\r\n  investments: Investment[];\r\n  addInvestment: () => void;\r\n  removeInvestment: (i: number) => void;\r\n  updateElement: (newWeight: number, i: number) => void;\r\n};\r\n\r\nexport const InvestmentsList = ({\r\n  investments,\r\n  addInvestment,\r\n  removeInvestment,\r\n  updateElement\r\n}: Prop) => {\r\n  return (\r\n    <div>\r\n      <InvestmentsHeader style={{ height: \"10vh\" }} />\r\n      {investments.map((e, index) => {\r\n        return (\r\n          <InvestmentItem\r\n            investment={e}\r\n            style={{ height: \"10vh\" }}\r\n            removeInvestment={removeInvestment}\r\n            index={index}\r\n            updateElement={updateElement}\r\n          />\r\n        );\r\n      })}\r\n      <Flex>\r\n        <button\r\n          style={{\r\n            marginRight: 0,\r\n            marginLeft: \"auto\",\r\n            border: \"none\",\r\n            fontSize: \"xx-large\",\r\n            fontWeight: \"bolder\",\r\n            backgroundColor: \"orange\",\r\n            color: \"white\",\r\n            borderRadius: \"20px\",\r\n            width: \"20%\",\r\n          }}\r\n          onClick={() => {\r\n            addInvestment();\r\n          }}\r\n        >\r\n          add\r\n        </button>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n","import { PercentageBar } from \"./shared/PercentageBar\";\r\n\r\ntype Props = {\r\n  value: number;\r\n  style: React.CSSProperties;\r\n};\r\n\r\nexport const Summary = ({ value, style }: Props) => {\r\n  return (\r\n    <div style={{ ...style, paddingLeft: \"5%\" }}>\r\n      <PercentageBar value={value}></PercentageBar>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Header } from \"./components/Header\";\r\nimport { InvestmentsList } from \"./components/Investments/InvestmentsList\";\r\nimport { Summary } from \"./components/Summary\";\r\n\r\nfunction App() {\r\n  const [investments, setInvestments] = useState([\r\n    {\r\n      name: \"Fidelity International Index\",\r\n      assetClass: \"International Funds\",\r\n      weight: 10,\r\n    },\r\n    {\r\n      name: \"Fidelity Small Cap Index\",\r\n      assetClass: \"Small Cap Funds\",\r\n      weight: 25,\r\n    },\r\n    {\r\n      name: \"Fidelity Mid Cap Index\",\r\n      assetClass: \"Mid Cap Funds\",\r\n      weight: 50,\r\n    },\r\n    {\r\n      name: \"Fidelity 500 Index\",\r\n      assetClass: \"Large Cap Funds\",\r\n      weight: 75,\r\n    },\r\n    {\r\n      name: \"Fidelity US Bond Index\",\r\n      assetClass: \"Bond Funds\",\r\n      weight: 90,\r\n    },\r\n  ]);\r\n\r\n  const addInvestment = () => {\r\n    let tmpInvestments = JSON.parse(JSON.stringify(investments));\r\n    tmpInvestments.push(tmpInvestments[tmpInvestments.length - 1]);\r\n    setInvestments(tmpInvestments);\r\n  };\r\n\r\n  const removeInvestment = (i: number) => {\r\n    let tmpInvestments = JSON.parse(JSON.stringify(investments));\r\n    tmpInvestments.splice(i, 1);\r\n    setInvestments(tmpInvestments);\r\n  };\r\n\r\n  const updateElement = (newWeight: number, i: number) => {\r\n    let tmpInvestments = JSON.parse(JSON.stringify(investments));\r\n    tmpInvestments[i].weight = newWeight;\r\n    setInvestments(tmpInvestments);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"1300px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n      <Header style={{ height: \"10vh\" }} />\r\n      <Summary\r\n        style={{ height: \"10vh\" }}\r\n        value={Math.round(\r\n          investments.reduce((acc, currentObj) => {\r\n            return {\r\n              ...acc,\r\n              weight: acc.weight + currentObj.weight,\r\n            };\r\n          }).weight / investments.length\r\n        )}\r\n      />\r\n      <InvestmentsList\r\n        investments={investments}\r\n        addInvestment={addInvestment}\r\n        removeInvestment={removeInvestment}\r\n        updateElement={updateElement}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}